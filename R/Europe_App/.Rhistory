library(data.table)
library(reshape2)
setwd('C:/Users/jmaburto/Documents/GitHub/CoD-burden-on-LA')
Country.code.vec <- c(4010,4020,4050,4070,4080,4085,4140,4170,4180,4190,4210,4240,4280,4290,4308)
Country.name.vec <- toupper(c('Austria','Belgium','Denmark','Finland','France','Germany','Greece','Ireland','Italy',
'Luxembourg','Netherlands','Portugal','Spain','Sweden','UK'))
names(Country.code.vec) <- Country.name.vec
Country.code.vec
library(data.table)
library(reshape2)
setwd('C:/Users/jmaburto/Documents/GitHub/CoD-burden-on-LA')
Country.code.vec <- c(4010,4020,4050,4070,4080,4085,4170,4180,4190,4210,4240,4280,4290,4308)
Country.name.vec <- toupper(c('Austria','Belgium','Denmark','Finland','France','Germany','Ireland','Italy',
'Luxembourg','Netherlands','Portugal','Spain','Sweden','UK'))
names(Country.code.vec) <- Country.name.vec
Deaths.data  <- NULL
#i<- 8
# Create a loop to find the year of change between ICD9 and ICD10 and create homogeneous datasets
for (i in 1:length(Country.code.vec)){
if(Country.code.vec[i] == '4010' | Country.code.vec[i] == '4020' |Country.code.vec[i] == '4070' | Country.code.vec[i] == '4140' |
Country.code.vec[i] == '4080' | Country.code.vec[i] == '4085' |Country.code.vec[i] == '4170' |Country.code.vec[i] == '4180' |
Country.code.vec[i] == '4190' |Country.code.vec[i] == '4210' |Country.code.vec[i] == '4240' |Country.code.vec[i] == '4280' |
Country.code.vec[i] == '4290' |Country.code.vec[i] == '4308') {ICD9.data  <- read.table(paste0('Data/Europe_CoD_data/ICD9-',Country.code.vec[i],'.txt'),header = T, sep = ',', stringsAsFactors = F)} else { ICD9.data <- NULL}
if (Country.code.vec[i] == '4010' |
Country.code.vec[i] == '4020' |
Country.code.vec[i] =='4050' |
Country.code.vec[i] =='4070' |
Country.code.vec[i] == '4080' |
Country.code.vec[i] =='4085') {ICD10.data <- read.table(paste0('Data/Europe_CoD_data/ICD10-',Country.code.vec[i],'.txt'),header = T, sep = ',', stringsAsFactors = F)} else {ICD10.data <- NULL}
ICD10.data <- ICD10.data[ICD10.data$Year >= 1990,]
ICD9.data <- ICD9.data[ICD9.data$Year >= 1990,]
# rbind both datasets
Deaths     <- rbind(ICD9.data,ICD10.data)
# convert to data.table, it will make thinhk easier for applying functions
Deaths     <- data.table(Deaths)
unique(Deaths$Age)
# add a numeric age, makes thinks easier to order when needed by age
Deaths <- Deaths[!is.na(Deaths$Age)]
code.age                     <- unique(Deaths$Age)
# age2 is coded numerically, 96 is UNK and 97 is total
code.age2                    <- c(97,0:4,seq(5,95,5),96)
names(code.age2)             <- code.age
Deaths$Age2                  <- code.age2[as.character(Deaths$Age)]
Deaths                       <- Deaths[with(Deaths,order(Year,Age2,Cause)),]
# Complete ages that have no values of causes of death and fill them with 0
mat.Deaths.f <- dcast(Deaths, Age2 + Cause ~ Year,value.var = 'Female',fill = 0, drop = F)
mat.Deaths.m <- dcast(Deaths, Age2 + Cause ~ Year,value.var = 'Male',fill = 0, drop = F)
# now return to original shape
Deaths.f      <- melt(mat.Deaths.f,id.vars = c('Age2','Cause'),
variable.name = 'Year',value.name = 'Female')
Deaths.m      <- melt(mat.Deaths.m,id.vars = c('Age2','Cause'),
variable.name = 'Year',value.name = 'Male')
Deaths.f$Year <- as.numeric(as.character(Deaths.f$Year))
Deaths.m$Year <- as.numeric(as.character(Deaths.m$Year))
# add the code and name of the country to the dataset
Deaths.complete         <- Deaths.f
Deaths.complete$Male    <- Deaths.m$Male
Deaths.complete$X       <- Country.code.vec[i]
Deaths.complete$Country <- Country.name.vec[i]
# add a the label to the age, for consistency with the original files
code.age3                     <- c(97,0:4,seq(5,95,5),96)
# age2 is coded numerically, 96 is UNK and 97 is total
code.age4                    <- code.age
names(code.age4)             <- code.age3
Deaths.complete$Age          <- code.age4[as.character(Deaths.complete$Age2)]
# go back to the original shape
Deaths.complete              <- Deaths.complete[,c('X','Year','Cause','Age','Female', 'Male', 'Country', 'Age2')]
Deaths.complete              <- Deaths.complete[with(Deaths.complete,order(Year,Age2,Cause)),]
#store all countries in one dataset
print(Country.name.vec[i])
print(unique(Deaths.complete$Year))
Deaths.data <- data.table(rbind(Deaths.data,Deaths.complete))
}
Deaths.data <- Deaths.data[with(Deaths.data, order(X,Year,Cause,Age2)),]
gdata:: keep (Deaths.data ,Country.name.vec,Country.code.vec, sure = T)
library(data.table)
library(reshape2)
setwd('C:/Users/jmaburto/Documents/GitHub/CoD-burden-on-LA')
source('R/7_1Europe.R')
cause.name.vec <- c('Total', 'Infectious','Neoplasms', 'Circulatory','Abnormal', 'Mental',
'Nervous','Endocrine','Digestive',
'Genitourinary','Perinatal','Respiratory','External','Homicide','Rest')
Deaths.data <- Deaths.data[Deaths.data$Age < 96,]
Deaths.data$Age3<- Deaths.data$Age2
Deaths.data[Deaths.data$Age2 >= 1 & Deaths.data$Age2 <= 4]$Age3 <- 1
CoD.data       <- Deaths.data[,list(Female =sum(Female)), by = list(X,Country,Year,Cause,Age3)]
CoD.data$Male  <- Deaths.data[,list(Male =sum(Male)), by = list(X,Country,Year,Cause,Age3)]$Male
setwd("C:/Users/jmaburto/Documents/GitHub/CoD-burden-on-LA/R/Europe_App//")
library(shiny)
library(ggplot2)
#rsconnect::setAccountInfo(name='jmaburto',
#                          token='7310E08D0D081D3C3CABCAA90D18045E',
#                          secret='Vzlie6RN39/THGhWKatGf/C68yZp+RENdTdOl/ey')
rsconnect::setAccountInfo(name='wb-lac',
token='06E52479A00F914E6EE44A17FFEA7E80',
secret='D7wg0N0miuHwY8reIRkCRy38E+TSCGXy+nHgm+KH')
library(ggplot2)
library(data.table)
load('Europe_decomp.RData')
runApp()
